PROGRAM:			function Program
					
					|
					epsilon

function:			FUNCTION IDENT SEMICOLON BEGIN_PARAMS declare_loop END_PARAMS BEGINLOCALS declare_loop END_LOCALS BEGIN_BODY state_loop END_BODY
					

declare_loop:		declare_loop declaration SEMICOLON 
					
					|
					epsilon

state_loop:			statement SEMICOLON state_loop2
										
					
state_loop2:		statement SEMICOLON state_loop2
					
					|
					epsilon

declaration:		ident_loop COLON declare_detour INTEGER
					

declare_detour:		ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET declare_detour2 OF
					
					|
					epsilon

declare_detour2:	L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET
					
					|
					epsilon

ident_loop:			IDENT COMMA ident_loop
					
					|
					IDENT


statement:			s1
					
					|
					s2

					|
					s3

					|
					s4

					|
					s5

					|
					s6789


s1:					var ASSIGN expression
					

s2:					IF bool_expr THEN state_loop ENDIF 
					
					|
					IF cbool_expr THEN state_loop ELSE state_loop ENDIF


s3:					WHILE bool_expr BEGINLOOP state_loop ENDLOOP
					

s4:					DO BEGINLOOP state_loop ENDLOOP WHILE bool_expr
					

s5:					FOR var ASSIGN NUMBER SEMICOLON boolexpr SEMICOLON var ASSIGN expression BEGINLOOP state_loop ENDLOOP


s6789:				READ var_loop
					
					|
					WRITE var_loop

					|
					CONTINUE

					|
					RETURN expression


var_loop:			var COMMA var_loop
					
					|
					var


bool_expr:			r_a_e rae_loop
					

rae_loop:			rae_loop OR r_a_e
					
					|
					epsilon

r_a_e:				r_e re_loop
					

re_loop:			re_loop AND r_e
					
					|
					epsilon

r_e:				not_detour re_choice
					

not_detour:			NOT
					
					|
					epsilon

re_choice:			expression comp expression
					
					|
					TRUE

					|
					FALSE

					|
					L_PAREN bool_expr R_PAREN


comp:				EQ
					
					|
					NEQ

					|
					LT

					|
					GT

					|
					LTE

					|
					GTE


expression:			mult_expr mult_expr_loop
					

mult_expr_loop:		ADD mult_expr mult_expr_loop
					
					|
					SUB mult_expr mult_expr_loop

					|
					epsilon

mult_expr:			term term_loop
					

term_loop:			MULT term term_loop
					
					|
					DIV term term_loop

					|
					MOD term term_loop


term:				not_detour term1
					
					|
					term2


term1:				var
					
					|
					NUMBER

					|
					L_PAREN expression R_PAREN


term2:				IDENT L_PAREN exp_loop R_PAREN
					

exp_loop:			expression
					
					|
					expression COMMA exp_loop

					|
					epsilon

var:				IDENT
					
					|
					IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET var_detour


var_detour:			L_SQUARE_BRACKET expression R_SQUARE_BRACKET
					
					|
					epsilon
